#!/usr/bin/perl

use strict;
use warnings;
use Cwd;
use File::Basename;

use 5.010;

if(!open RESULT, ">", ("result_" . basename(getcwd) . "_new")) {
    die "Cannot create or open result file to write: $!";
}

my @benchmark = ();
if(!open BENCHMARK, shift(@ARGV)) {
    warn "Cannot open the benchmark file: $!";
} else {
    foreach (<BENCHMARK>) {
        chomp;
        my @list = ();
        if(m/\A(?:\s*)(?<MATCHED>.*)(?:\s*)\z/) {
            @list = split /\s+/, $+{MATCHED};
        }
        push @benchmark, @list;
    }
}
close BENCHMARK;

foreach my $network_file_name (@ARGV) {
    my($TP, $FP, $TN, $FN, $precision, $recall, $fmeasure);
    $TP = 0, $FP = 0, $TN = 0, $FN = 0, $precision = 0, $recall = 0, $fmeasure = 0;
    my @network = ();

    if(! open _FILE, $network_file_name) {
        warn "Cannot open file $network_file_name: $!";
    } else {
        foreach (<_FILE>) {
            chomp;
            my @list = ();
            if(m/\A(?:\s*)(?<MATCHED>.*)(?:\s*)\z/) {
                @list = split /\s+/, $+{MATCHED};
            }
            push @network, @list;
        }

        foreach (0..$#network) {
            if($network[$_] eq "1") {
                if($benchmark[$_] eq "1") {
                    $TP += 1;
                } else {
                    $FP += 1;
                }
            } else {
                if($benchmark[$_] eq "0") {
                    $TN += 1; 
                } else {
                    $FN += 1;
                }
            }
        }
        $precision = (($TP + $FP) == 0) ? 0 : $TP/($TP + $FP);
        $recall = (($TP + $FN) == 0) ? 0 : $TP/($TP + $FN);
        $fmeasure = ($precision + $recall == 0) ? 0: 2 * ($precision * $recall) / ($precision + $recall);
        printf RESULT "$network_file_name: %20.10f\n", $fmeasure; 
    }
    close _FILE;
}
close RESULT;

